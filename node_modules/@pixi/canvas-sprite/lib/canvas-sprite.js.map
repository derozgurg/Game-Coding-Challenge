{"version":3,"file":"canvas-sprite.js","sources":["../src/CanvasSpriteRenderer.js","../src/Sprite.js"],"sourcesContent":["import { SCALE_MODES, BLEND_MODES } from '@pixi/constants';\nimport { Matrix, groupD8 } from '@pixi/math';\nimport { canvasUtils } from '@pixi/canvas-renderer';\n\nconst canvasRenderWorldTransform = new Matrix();\n\n/**\n * Types that can be passed to drawImage\n * @typedef {HTMLImageElement | HTMLCanvasElement | HTMLVideoElement | ImageBitmap} ICanvasImageSource\n * @memberof PIXI\n */\n\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original PixiJS version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they now\n * share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasSpriteRenderer:\n * https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/CanvasSpriteRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching sprites.\n *\n * @class\n * @protected\n * @memberof PIXI\n */\nexport class CanvasSpriteRenderer\n{\n    /**\n     * @param {PIXI.Renderer} renderer -The renderer sprite this batch works for.\n     */\n    constructor(renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    /**\n     * Renders the sprite object.\n     *\n     * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\n     */\n    render(sprite)\n    {\n        const texture = sprite._texture;\n        const renderer = this.renderer;\n        const context = renderer.context;\n\n        const width = texture._frame.width;\n        const height = texture._frame.height;\n\n        let wt = sprite.transform.worldTransform;\n        let dx = 0;\n        let dy = 0;\n\n        const source = texture.baseTexture.getDrawableSource();\n\n        if (texture.orig.width <= 0 || texture.orig.height <= 0 || !texture.valid || !source)\n        {\n            return;\n        }\n\n        if (!texture.valid)\n        {\n            return;\n        }\n\n        renderer.setBlendMode(sprite.blendMode, true);\n\n        renderer.context.globalAlpha = sprite.worldAlpha;\n\n        // If smoothingEnabled is supported and we need to change the smoothing property for sprite texture\n        const smoothingEnabled = texture.baseTexture.scaleMode === SCALE_MODES.LINEAR;\n\n        if (renderer.smoothProperty && renderer.context[renderer.smoothProperty] !== smoothingEnabled)\n        {\n            context[renderer.smoothProperty] = smoothingEnabled;\n        }\n\n        if (texture.trim)\n        {\n            dx = (texture.trim.width / 2) + texture.trim.x - (sprite.anchor.x * texture.orig.width);\n            dy = (texture.trim.height / 2) + texture.trim.y - (sprite.anchor.y * texture.orig.height);\n        }\n        else\n        {\n            dx = (0.5 - sprite.anchor.x) * texture.orig.width;\n            dy = (0.5 - sprite.anchor.y) * texture.orig.height;\n        }\n\n        if (texture.rotate)\n        {\n            wt.copyTo(canvasRenderWorldTransform);\n            wt = canvasRenderWorldTransform;\n            groupD8.matrixAppendRotationInv(wt, texture.rotate, dx, dy);\n            // the anchor has already been applied above, so lets set it to zero\n            dx = 0;\n            dy = 0;\n        }\n\n        dx -= width / 2;\n        dy -= height / 2;\n\n        renderer.setContextTransform(wt, sprite.roundPixels, 1);\n        // Allow for pixel rounding\n        if (sprite.roundPixels)\n        {\n            dx = dx | 0;\n            dy = dy | 0;\n        }\n\n        const resolution = texture.baseTexture.resolution;\n        const outerBlend = renderer._outerBlend;\n\n        if (outerBlend)\n        {\n            context.save();\n            context.beginPath();\n            context.rect(\n                dx * renderer.resolution,\n                dy * renderer.resolution,\n                width * renderer.resolution,\n                height * renderer.resolution\n            );\n            context.clip();\n        }\n\n        if (sprite.tint !== 0xFFFFFF)\n        {\n            if (sprite._cachedTint !== sprite.tint || sprite._tintedCanvas.tintId !== sprite._texture._updateID)\n            {\n                sprite._cachedTint = sprite.tint;\n\n                // TODO clean up caching - how to clean up the caches?\n                sprite._tintedCanvas = canvasUtils.getTintedCanvas(sprite, sprite.tint);\n            }\n\n            context.drawImage(\n                sprite._tintedCanvas,\n                0,\n                0,\n                Math.floor(width * resolution),\n                Math.floor(height * resolution),\n                Math.floor(dx * renderer.resolution),\n                Math.floor(dy * renderer.resolution),\n                Math.floor(width * renderer.resolution),\n                Math.floor(height * renderer.resolution)\n            );\n        }\n        else\n        {\n            context.drawImage(\n                source,\n                texture._frame.x * resolution,\n                texture._frame.y * resolution,\n                Math.floor(width * resolution),\n                Math.floor(height * resolution),\n                Math.floor(dx * renderer.resolution),\n                Math.floor(dy * renderer.resolution),\n                Math.floor(width * renderer.resolution),\n                Math.floor(height * renderer.resolution)\n            );\n        }\n\n        if (outerBlend)\n        {\n            context.restore();\n        }\n        // just in case, leaking outer blend here will be catastrophic!\n        renderer.setBlendMode(BLEND_MODES.NORMAL);\n    }\n\n    /**\n     * destroy the sprite object.\n     *\n     */\n    destroy()\n    {\n        this.renderer = null;\n    }\n}\n","import { Sprite } from '@pixi/sprite';\n\n/**\n * Cached tinted texture.\n * @memberof PIXI.Sprite#\n * @member {HTMLCanvasElement} _tintedCanvas\n * @protected\n */\nSprite.prototype._tintedCanvas = null;\n\n/**\n* Renders the object using the Canvas renderer\n*\n* @private\n* @method _renderCanvas\n* @memberof PIXI.Sprite#\n* @param {PIXI.CanvasRenderer} renderer - The renderer\n*/\nSprite.prototype._renderCanvas = function _renderCanvas(renderer)\n{\n    renderer.plugins.sprite.render(this);\n};\n"],"names":["const","Matrix","let","SCALE_MODES","groupD8","canvasUtils","BLEND_MODES","Sprite"],"mappings":"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"}