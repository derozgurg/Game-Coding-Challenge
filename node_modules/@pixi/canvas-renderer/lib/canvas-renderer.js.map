{"version":3,"file":"canvas-renderer.js","sources":["../src/utils/CanvasMaskManager.js","../src/utils/canUseNewCanvasBlendModes.js","../src/utils/mapCanvasBlendModesToPixi.js","../src/CanvasRenderer.js","../src/canvasUtils.js","../src/Renderer.js","../src/BaseTexture.js"],"sourcesContent":["import { SHAPES } from '@pixi/math';\n\n/**\n * A set of functions used to handle masking.\n *\n * Sprite masking is not supported on the CanvasRenderer.\n *\n * @class\n * @memberof PIXI\n */\nexport class CanvasMaskManager\n{\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\n     */\n    constructor(renderer)\n    {\n        this.renderer = renderer;\n\n        this._foundShapes = [];\n    }\n\n    /**\n     * This method adds it to the current stack of masks.\n     *\n     * @param {PIXI.MaskData | PIXI.Graphics} maskData - the maskData that will be pushed\n     */\n    pushMask(maskData)\n    {\n        const renderer = this.renderer;\n        const maskObject = maskData.isMaskData ? maskData.maskObject : maskData;\n\n        renderer.context.save();\n\n        // TODO support sprite alpha masks??\n        // lots of effort required. If demand is great enough..\n\n        const foundShapes = this._foundShapes;\n\n        this.recursiveFindShapes(maskObject, foundShapes);\n        if (foundShapes.length > 0)\n        {\n            const { context } = renderer;\n\n            context.beginPath();\n\n            for (let i = 0; i < foundShapes.length; i++)\n            {\n                const shape = foundShapes[i];\n                const transform = shape.transform.worldTransform;\n\n                this.renderer.setContextTransform(transform);\n\n                this.renderGraphicsShape(shape);\n            }\n\n            foundShapes.length = 0;\n            context.clip();\n        }\n    }\n\n    /**\n     * Renders all PIXI.Graphics shapes in a subtree.\n     *\n     * @param {PIXI.Container} container - container to scan.\n     * @param {PIXI.Graphics[]} out - where to put found shapes\n     */\n    recursiveFindShapes(container, out)\n    {\n        if (container.geometry && container.geometry.graphicsData)\n        {\n            out.push(container);\n        }\n\n        const { children } = container;\n\n        if (children)\n        {\n            for (let i = 0; i < children.length; i++)\n            {\n                this.recursiveFindShapes(children[i], out);\n            }\n        }\n    }\n\n    /**\n     * Renders a PIXI.Graphics shape.\n     *\n     * @param {PIXI.Graphics} graphics - The object to render.\n     */\n    renderGraphicsShape(graphics)\n    {\n        graphics.finishPoly();\n\n        const context = this.renderer.context;\n        const graphicsData = graphics.geometry.graphicsData;\n        const len = graphicsData.length;\n\n        if (len === 0)\n        {\n            return;\n        }\n\n        for (let i = 0; i < len; i++)\n        {\n            const data = graphicsData[i];\n            const shape = data.shape;\n\n            if (data.type === SHAPES.POLY)\n            {\n                const points = shape.points;\n\n                context.moveTo(points[0], points[1]);\n\n                for (let j = 1; j < points.length / 2; j++)\n                {\n                    context.lineTo(points[j * 2], points[(j * 2) + 1]);\n                }\n\n                // if the first and last point are the same close the path - much neater :)\n                if (points[0] === points[points.length - 2] && points[1] === points[points.length - 1])\n                {\n                    context.closePath();\n                }\n            }\n            else if (data.type === SHAPES.RECT)\n            {\n                context.rect(shape.x, shape.y, shape.width, shape.height);\n                context.closePath();\n            }\n            else if (data.type === SHAPES.CIRC)\n            {\n                // TODO - need to be Undefined!\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n                context.closePath();\n            }\n            else if (data.type === SHAPES.ELIP)\n            {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                const w = shape.width * 2;\n                const h = shape.height * 2;\n\n                const x = shape.x - (w / 2);\n                const y = shape.y - (h / 2);\n\n                const kappa = 0.5522848;\n                const ox = (w / 2) * kappa; // control point offset horizontal\n                const oy = (h / 2) * kappa; // control point offset vertical\n                const xe = x + w; // x-end\n                const ye = y + h; // y-end\n                const xm = x + (w / 2); // x-middle\n                const ym = y + (h / 2); // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n                context.closePath();\n            }\n            else if (data.type === SHAPES.RREC)\n            {\n                const rx = shape.x;\n                const ry = shape.y;\n                const width = shape.width;\n                const height = shape.height;\n                let radius = shape.radius;\n\n                const maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.moveTo(rx, ry + radius);\n                context.lineTo(rx, ry + height - radius);\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n                context.lineTo(rx + width - radius, ry + height);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n                context.lineTo(rx + width, ry + radius);\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n                context.lineTo(rx + radius, ry);\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\n                context.closePath();\n            }\n        }\n    }\n\n    /**\n     * Restores the current drawing context to the state it was before the mask was applied.\n     *\n     * @param {PIXI.CanvasRenderer} renderer - The renderer context to use.\n     */\n    popMask(renderer)\n    {\n        renderer.context.restore();\n        renderer.invalidateBlendMode();\n    }\n\n    /**\n     * Destroys this canvas mask manager.\n     *\n     */\n    destroy()\n    {\n        /* empty */\n    }\n}\n","/**\n * Creates a little colored canvas\n *\n * @ignore\n * @param {string} color - The color to make the canvas\n * @return {canvas} a small canvas element\n */\nfunction createColoredCanvas(color)\n{\n    const canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    const context = canvas.getContext('2d');\n\n    context.fillStyle = color;\n    context.fillRect(0, 0, 6, 1);\n\n    return canvas;\n}\n\n/**\n * Checks whether the Canvas BlendModes are supported by the current browser\n *\n * @private\n * @return {boolean} whether they are supported\n */\nexport function canUseNewCanvasBlendModes()\n{\n    if (typeof document === 'undefined')\n    {\n        return false;\n    }\n\n    const magenta = createColoredCanvas('#ff00ff');\n    const yellow = createColoredCanvas('#ffff00');\n\n    const canvas = document.createElement('canvas');\n\n    canvas.width = 6;\n    canvas.height = 1;\n\n    const context = canvas.getContext('2d');\n\n    context.globalCompositeOperation = 'multiply';\n    context.drawImage(magenta, 0, 0);\n    context.drawImage(yellow, 2, 0);\n\n    const imageData = context.getImageData(2, 0, 1, 1);\n\n    if (!imageData)\n    {\n        return false;\n    }\n\n    const data = imageData.data;\n\n    return (data[0] === 255 && data[1] === 0 && data[2] === 0);\n}\n","import { BLEND_MODES } from '@pixi/constants';\nimport { canUseNewCanvasBlendModes } from './canUseNewCanvasBlendModes';\n\n/**\n * Maps blend combinations to Canvas.\n *\n * @memberof PIXI\n * @function mapCanvasBlendModesToPixi\n * @private\n * @param {string[]} [array=[]] - The array to output into.\n * @return {string[]} Mapped modes.\n */\nexport function mapCanvasBlendModesToPixi(array = [])\n{\n    if (canUseNewCanvasBlendModes())\n    {\n        array[BLEND_MODES.NORMAL] = 'source-over';\n        array[BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\n        array[BLEND_MODES.MULTIPLY] = 'multiply';\n        array[BLEND_MODES.SCREEN] = 'screen';\n        array[BLEND_MODES.OVERLAY] = 'overlay';\n        array[BLEND_MODES.DARKEN] = 'darken';\n        array[BLEND_MODES.LIGHTEN] = 'lighten';\n        array[BLEND_MODES.COLOR_DODGE] = 'color-dodge';\n        array[BLEND_MODES.COLOR_BURN] = 'color-burn';\n        array[BLEND_MODES.HARD_LIGHT] = 'hard-light';\n        array[BLEND_MODES.SOFT_LIGHT] = 'soft-light';\n        array[BLEND_MODES.DIFFERENCE] = 'difference';\n        array[BLEND_MODES.EXCLUSION] = 'exclusion';\n        array[BLEND_MODES.HUE] = 'hue';\n        array[BLEND_MODES.SATURATION] = 'saturate';\n        array[BLEND_MODES.COLOR] = 'color';\n        array[BLEND_MODES.LUMINOSITY] = 'luminosity';\n    }\n    else\n    {\n        // this means that the browser does not support the cool new blend modes in canvas 'cough' ie 'cough'\n        array[BLEND_MODES.NORMAL] = 'source-over';\n        array[BLEND_MODES.ADD] = 'lighter'; // IS THIS OK???\n        array[BLEND_MODES.MULTIPLY] = 'source-over';\n        array[BLEND_MODES.SCREEN] = 'source-over';\n        array[BLEND_MODES.OVERLAY] = 'source-over';\n        array[BLEND_MODES.DARKEN] = 'source-over';\n        array[BLEND_MODES.LIGHTEN] = 'source-over';\n        array[BLEND_MODES.COLOR_DODGE] = 'source-over';\n        array[BLEND_MODES.COLOR_BURN] = 'source-over';\n        array[BLEND_MODES.HARD_LIGHT] = 'source-over';\n        array[BLEND_MODES.SOFT_LIGHT] = 'source-over';\n        array[BLEND_MODES.DIFFERENCE] = 'source-over';\n        array[BLEND_MODES.EXCLUSION] = 'source-over';\n        array[BLEND_MODES.HUE] = 'source-over';\n        array[BLEND_MODES.SATURATION] = 'source-over';\n        array[BLEND_MODES.COLOR] = 'source-over';\n        array[BLEND_MODES.LUMINOSITY] = 'source-over';\n    }\n    // not-premultiplied, only for webgl\n    array[BLEND_MODES.NORMAL_NPM] = array[BLEND_MODES.NORMAL];\n    array[BLEND_MODES.ADD_NPM] = array[BLEND_MODES.ADD];\n    array[BLEND_MODES.SCREEN_NPM] = array[BLEND_MODES.SCREEN];\n\n    // composite operations\n    array[BLEND_MODES.SRC_IN] = 'source-in';\n    array[BLEND_MODES.SRC_OUT] = 'source-out';\n    array[BLEND_MODES.SRC_ATOP] = 'source-atop';\n    array[BLEND_MODES.DST_OVER] = 'destination-over';\n    array[BLEND_MODES.DST_IN] = 'destination-in';\n    array[BLEND_MODES.DST_OUT] = 'destination-out';\n    array[BLEND_MODES.DST_ATOP] = 'destination-atop';\n    array[BLEND_MODES.XOR] = 'xor';\n\n    // SUBTRACT from flash, does not exist in canvas\n    array[BLEND_MODES.SUBTRACT] = 'source-over';\n\n    return array;\n}\n","import { AbstractRenderer, resources } from '@pixi/core';\nimport { CanvasRenderTarget, sayHello } from '@pixi/utils';\nimport { CanvasMaskManager } from './utils/CanvasMaskManager';\nimport { mapCanvasBlendModesToPixi } from './utils/mapCanvasBlendModesToPixi';\nimport { RENDERER_TYPE, SCALE_MODES, BLEND_MODES } from '@pixi/constants';\nimport { settings } from '@pixi/settings';\nimport { Matrix } from '@pixi/math';\n\nconst tempMatrix = new Matrix();\n\n/**\n * The CanvasRenderer draws the scene and all its content onto a 2d canvas.\n *\n * This renderer should be used for browsers that do not support WebGL.\n * Don't forget to add the CanvasRenderer.view to your DOM or you will not see anything!\n *\n * @class\n * @memberof PIXI\n * @extends PIXI.AbstractRenderer\n */\nexport class CanvasRenderer extends AbstractRenderer\n{\n    /**\n     * @param {object} [options] - The optional renderer parameters\n     * @param {number} [options.width=800] - the width of the screen\n     * @param {number} [options.height=600] - the height of the screen\n     * @param {HTMLCanvasElement} [options.view] - the canvas to use as a view, optional\n     * @param {boolean} [options.transparent=false] - If the render view is transparent, default false\n     * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n     *   resolutions other than 1\n     * @param {boolean} [options.antialias=false] - sets antialias\n     * @param {number} [options.resolution=1] - The resolution / device pixel ratio of the renderer. The\n     *  resolution of the renderer retina would be 2.\n     * @param {boolean} [options.preserveDrawingBuffer=false] - enables drawing buffer preservation,\n     *  enable this if you need to call toDataUrl on the webgl context.\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n     *      not before the new render pass.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     */\n    constructor(options, arg2, arg3)\n    {\n        super('Canvas', options, arg2, arg3);\n\n        this.type = RENDERER_TYPE.CANVAS;\n\n        /**\n         * The root canvas 2d context that everything is drawn with.\n         *\n         * @member {CanvasRenderingContext2D}\n         */\n        this.rootContext = this.view.getContext('2d', { alpha: this.transparent });\n\n        /**\n         * The currently active canvas 2d context (could change with renderTextures)\n         *\n         * @member {CanvasRenderingContext2D}\n         */\n        this.context = this.rootContext;\n\n        /**\n         * Boolean flag controlling canvas refresh.\n         *\n         * @member {boolean}\n         */\n        this.refresh = true;\n\n        /**\n         * Instance of a CanvasMaskManager, handles masking when using the canvas renderer.\n         *\n         * @member {PIXI.CanvasMaskManager}\n         */\n        this.maskManager = new CanvasMaskManager(this);\n\n        /**\n         * The canvas property used to set the canvas smoothing property.\n         *\n         * @member {string}\n         */\n        this.smoothProperty = 'imageSmoothingEnabled';\n\n        if (!this.rootContext.imageSmoothingEnabled)\n        {\n            if (this.rootContext.webkitImageSmoothingEnabled)\n            {\n                this.smoothProperty = 'webkitImageSmoothingEnabled';\n            }\n            else if (this.rootContext.mozImageSmoothingEnabled)\n            {\n                this.smoothProperty = 'mozImageSmoothingEnabled';\n            }\n            else if (this.rootContext.oImageSmoothingEnabled)\n            {\n                this.smoothProperty = 'oImageSmoothingEnabled';\n            }\n            else if (this.rootContext.msImageSmoothingEnabled)\n            {\n                this.smoothProperty = 'msImageSmoothingEnabled';\n            }\n        }\n\n        this.initPlugins(CanvasRenderer.__plugins);\n\n        /**\n         * Tracks the blend modes useful for this renderer.\n         *\n         * @member {object<number, string>}\n         */\n        this.blendModes = mapCanvasBlendModesToPixi();\n        this._activeBlendMode = null;\n        this._outerBlend = false;\n\n        /**\n         * Projection transform, passed in render() stored here\n         * @type {null}\n         * @private\n         */\n        this._projTransform = null;\n\n        this.renderingToScreen = false;\n\n        sayHello('Canvas');\n\n        /**\n         * Fired after rendering finishes.\n         *\n         * @event PIXI.CanvasRenderer#postrender\n         */\n\n        /**\n         * Fired before rendering starts.\n         *\n         * @event PIXI.CanvasRenderer#prerender\n         */\n\n        this.resize(this.options.width, this.options.height);\n    }\n\n    /**\n     * Renders the object to this canvas view\n     *\n     * @param {PIXI.DisplayObject} displayObject - The object to be rendered\n     * @param {PIXI.RenderTexture} [renderTexture] - A render texture to be rendered to.\n     *  If unset, it will render to the root context.\n     * @param {boolean} [clear=false] - Whether to clear the canvas before drawing\n     * @param {PIXI.Matrix} [transform] - A transformation to be applied\n     * @param {boolean} [skipUpdateTransform=false] - Whether to skip the update transform\n     */\n    render(displayObject, renderTexture, clear, transform, skipUpdateTransform)\n    {\n        if (!this.view)\n        {\n            return;\n        }\n\n        // can be handy to know!\n        this.renderingToScreen = !renderTexture;\n\n        this.emit('prerender');\n\n        const rootResolution = this.resolution;\n\n        if (renderTexture)\n        {\n            renderTexture = renderTexture.baseTexture || renderTexture;\n\n            if (!renderTexture._canvasRenderTarget)\n            {\n                renderTexture._canvasRenderTarget = new CanvasRenderTarget(\n                    renderTexture.width,\n                    renderTexture.height,\n                    renderTexture.resolution\n                );\n                renderTexture.resource = new resources.CanvasResource(renderTexture._canvasRenderTarget.canvas);\n                renderTexture.valid = true;\n            }\n\n            this.context = renderTexture._canvasRenderTarget.context;\n            this.resolution = renderTexture._canvasRenderTarget.resolution;\n        }\n        else\n        {\n            this.context = this.rootContext;\n        }\n\n        const context = this.context;\n\n        this._projTransform = transform || null;\n\n        if (!renderTexture)\n        {\n            this._lastObjectRendered = displayObject;\n        }\n\n        if (!skipUpdateTransform)\n        {\n            // update the scene graph\n            const cacheParent = displayObject.parent;\n\n            displayObject.parent = this._tempDisplayObjectParent;\n            displayObject.updateTransform();\n            displayObject.parent = cacheParent;\n            // displayObject.hitArea = //TODO add a temp hit area\n        }\n\n        context.save();\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.globalAlpha = 1;\n        this._activeBlendMode = BLEND_MODES.NORMAL;\n        this._outerBlend = false;\n        context.globalCompositeOperation = this.blendModes[BLEND_MODES.NORMAL];\n\n        if (clear !== undefined ? clear : this.clearBeforeRender)\n        {\n            if (this.renderingToScreen)\n            {\n                if (this.transparent)\n                {\n                    context.clearRect(0, 0, this.width, this.height);\n                }\n                else\n                {\n                    context.fillStyle = this._backgroundColorString;\n                    context.fillRect(0, 0, this.width, this.height);\n                }\n            } // else {\n            // TODO: implement background for CanvasRenderTarget or RenderTexture?\n            // }\n        }\n\n        // TODO RENDER TARGET STUFF HERE..\n        const tempContext = this.context;\n\n        this.context = context;\n        displayObject.renderCanvas(this);\n        this.context = tempContext;\n\n        context.restore();\n\n        this.resolution = rootResolution;\n        this._projTransform = null;\n\n        this.emit('postrender');\n    }\n\n    /**\n     * sets matrix of context\n     * called only from render() methods\n     * takes care about resolution\n     * @param {PIXI.Matrix} transform world matrix of current element\n     * @param {boolean} [roundPixels] whether to round (tx,ty) coords\n     * @param {number} [localResolution] If specified, used instead of `renderer.resolution` for local scaling\n     */\n    setContextTransform(transform, roundPixels, localResolution)\n    {\n        let mat = transform;\n        const proj = this._projTransform;\n        const resolution = this.resolution;\n\n        localResolution = localResolution || resolution;\n\n        if (proj)\n        {\n            mat = tempMatrix;\n            mat.copyFrom(transform);\n            mat.prepend(proj);\n        }\n\n        if (roundPixels)\n        {\n            this.context.setTransform(\n                mat.a * localResolution,\n                mat.b * localResolution,\n                mat.c * localResolution,\n                mat.d * localResolution,\n                (mat.tx * resolution) | 0,\n                (mat.ty * resolution) | 0\n            );\n        }\n        else\n        {\n            this.context.setTransform(\n                mat.a * localResolution,\n                mat.b * localResolution,\n                mat.c * localResolution,\n                mat.d * localResolution,\n                mat.tx * resolution,\n                mat.ty * resolution\n            );\n        }\n    }\n\n    /**\n     * Clear the canvas of renderer.\n     *\n     * @param {string} [clearColor] - Clear the canvas with this color, except the canvas is transparent.\n     */\n    clear(clearColor)\n    {\n        const context = this.context;\n\n        clearColor = clearColor || this._backgroundColorString;\n\n        if (!this.transparent && clearColor)\n        {\n            context.fillStyle = clearColor;\n            context.fillRect(0, 0, this.width, this.height);\n        }\n        else\n        {\n            context.clearRect(0, 0, this.width, this.height);\n        }\n    }\n\n    /**\n     * Sets the blend mode of the renderer.\n     *\n     * @param {number} blendMode - See {@link PIXI.BLEND_MODES} for valid values.\n     * @param {boolean} [readyForOuterBlend=false] - Some blendModes are dangerous, they affect outer space of sprite.\n     * Pass `true` only if you are ready to use them.\n     */\n    setBlendMode(blendMode, readyForOuterBlend)\n    {\n        const outerBlend = blendMode === BLEND_MODES.SRC_IN\n            || blendMode === BLEND_MODES.SRC_OUT\n            || blendMode === BLEND_MODES.DST_IN\n            || blendMode === BLEND_MODES.DST_ATOP;\n\n        if (!readyForOuterBlend && outerBlend)\n        {\n            blendMode = BLEND_MODES.NORMAL;\n        }\n\n        if (this._activeBlendMode === blendMode)\n        {\n            return;\n        }\n\n        this._activeBlendMode = blendMode;\n        this._outerBlend = outerBlend;\n        this.context.globalCompositeOperation = this.blendModes[blendMode];\n    }\n\n    /**\n     * Removes everything from the renderer and optionally removes the Canvas DOM element.\n     *\n     * @param {boolean} [removeView=false] - Removes the Canvas element from the DOM.\n     */\n    destroy(removeView)\n    {\n        // call the base destroy\n        super.destroy(removeView);\n\n        this.context = null;\n\n        this.refresh = true;\n\n        this.maskManager.destroy();\n        this.maskManager = null;\n\n        this.smoothProperty = null;\n    }\n\n    /**\n     * Resizes the canvas view to the specified width and height.\n     *\n     * @extends PIXI.AbstractRenderer#resize\n     *\n     * @param {number} screenWidth - the new width of the screen\n     * @param {number} screenHeight - the new height of the screen\n     */\n    resize(screenWidth, screenHeight)\n    {\n        super.resize(screenWidth, screenHeight);\n\n        // reset the scale mode.. oddly this seems to be reset when the canvas is resized.\n        // surely a browser bug?? Let PixiJS fix that for you..\n        if (this.smoothProperty)\n        {\n            this.rootContext[this.smoothProperty] = (settings.SCALE_MODE === SCALE_MODES.LINEAR);\n        }\n    }\n\n    /**\n     * Checks if blend mode has changed.\n     */\n    invalidateBlendMode()\n    {\n        this._activeBlendMode = this.blendModes.indexOf(this.context.globalCompositeOperation);\n    }\n\n    /**\n     * Collection of installed plugins. These are included by default in PIXI, but can be excluded\n     * by creating a custom build. Consult the README for more information about creating custom\n     * builds and excluding plugins.\n     * @name PIXI.CanvasRenderer#plugins\n     * @type {object}\n     * @readonly\n     * @property {PIXI.accessibility.AccessibilityManager} accessibility Support tabbing interactive elements.\n     * @property {PIXI.CanvasExtract} extract Extract image data from renderer.\n     * @property {PIXI.interaction.InteractionManager} interaction Handles mouse, touch and pointer events.\n     * @property {PIXI.CanvasPrepare} prepare Pre-render display objects.\n     */\n\n    /**\n     * Adds a plugin to the renderer.\n     *\n     * @method\n     * @param {string} pluginName - The name of the plugin.\n     * @param {Function} ctor - The constructor function or class for the plugin.\n     */\n    static registerPlugin(pluginName, ctor)\n    {\n        CanvasRenderer.__plugins = CanvasRenderer.__plugins || {};\n        CanvasRenderer.__plugins[pluginName] = ctor;\n    }\n}\n","import { hex2rgb, rgb2hex } from '@pixi/utils';\nimport { canUseNewCanvasBlendModes } from './utils/canUseNewCanvasBlendModes';\n\n/**\n * Utility methods for Sprite/Texture tinting.\n *\n * Tinting with the CanvasRenderer involves creating a new canvas to use as a texture,\n * so be aware of the performance implications.\n *\n * @namespace PIXI.canvasUtils\n * @memberof PIXI\n */\nexport const canvasUtils = {\n    /**\n     * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n     *\n     * @memberof PIXI.canvasUtils\n     * @param {PIXI.Sprite} sprite - the sprite to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @return {HTMLCanvasElement} The tinted canvas\n     */\n    getTintedCanvas: (sprite, color) =>\n    {\n        const texture = sprite.texture;\n\n        color = canvasUtils.roundColor(color);\n\n        const stringColor = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n\n        texture.tintCache = texture.tintCache || {};\n\n        const cachedCanvas = texture.tintCache[stringColor];\n\n        let canvas;\n\n        if (cachedCanvas)\n        {\n            if (cachedCanvas.tintId === texture._updateID)\n            {\n                return texture.tintCache[stringColor];\n            }\n\n            canvas = texture.tintCache[stringColor];\n        }\n        else\n        {\n            canvas = document.createElement('canvas');\n        }\n\n        canvasUtils.tintMethod(texture, color, canvas);\n\n        canvas.tintId = texture._updateID;\n\n        if (canvasUtils.convertTintToImage)\n        {\n            // is this better?\n            const tintImage = new Image();\n\n            tintImage.src = canvas.toDataURL();\n\n            texture.tintCache[stringColor] = tintImage;\n        }\n        else\n        {\n            texture.tintCache[stringColor] = canvas;\n        }\n\n        return canvas;\n    },\n\n    /**\n     * Basically this method just needs a sprite and a color and tints the sprite with the given color.\n     *\n     * @memberof PIXI.canvasUtils\n     * @param {PIXI.Sprite} sprite - the sprite to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @return {HTMLCanvasElement} The tinted canvas\n     */\n    getTintedPattern: (texture, color) =>\n    {\n        color = canvasUtils.roundColor(color);\n\n        const stringColor = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n\n        texture.patternCache = texture.patternCache || {};\n\n        let pattern = texture.patternCache[stringColor];\n\n        if (pattern && pattern.tintId === texture._updateID)\n        {\n            return pattern;\n        }\n        if (!canvasUtils.canvas)\n        {\n            canvasUtils.canvas = document.createElement('canvas');\n        }\n        canvasUtils.tintMethod(texture, color, canvasUtils.canvas);\n        pattern = canvasUtils.canvas.getContext('2d').createPattern(canvasUtils.canvas, 'repeat');\n        pattern.tintId = texture._updateID;\n        texture.patternCache[stringColor] = pattern;\n\n        return pattern;\n    },\n\n    /**\n     * Tint a texture using the 'multiply' operation.\n     *\n     * @memberof PIXI.canvasUtils\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithMultiply: (texture, color, canvas) =>\n    {\n        const context = canvas.getContext('2d');\n        const crop = texture._frame.clone();\n        const resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = Math.ceil(crop.width);\n        canvas.height = Math.ceil(crop.height);\n\n        context.save();\n        context.fillStyle = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n\n        context.fillRect(0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'multiply';\n\n        const source = texture.baseTexture.getDrawableSource();\n\n        context.drawImage(\n            source,\n            crop.x,\n            crop.y,\n            crop.width,\n            crop.height,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        context.globalCompositeOperation = 'destination-atop';\n\n        context.drawImage(\n            source,\n            crop.x,\n            crop.y,\n            crop.width,\n            crop.height,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n        context.restore();\n    },\n\n    /**\n     * Tint a texture using the 'overlay' operation.\n     *\n     * @memberof PIXI.canvasUtils\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithOverlay(texture, color, canvas)\n    {\n        const context = canvas.getContext('2d');\n        const crop = texture._frame.clone();\n        const resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = Math.ceil(crop.width);\n        canvas.height = Math.ceil(crop.height);\n\n        context.save();\n        context.globalCompositeOperation = 'copy';\n        context.fillStyle = `#${(`00000${(color | 0).toString(16)}`).substr(-6)}`;\n        context.fillRect(0, 0, crop.width, crop.height);\n\n        context.globalCompositeOperation = 'destination-atop';\n        context.drawImage(\n            texture.baseTexture.getDrawableSource(),\n            crop.x,\n            crop.y,\n            crop.width,\n            crop.height,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        // context.globalCompositeOperation = 'copy';\n        context.restore();\n    },\n\n    /**\n     * Tint a texture pixel per pixel.\n     *\n     * @memberof PIXI.canvasUtils\n     * @param {PIXI.Texture} texture - the texture to tint\n     * @param {number} color - the color to use to tint the sprite with\n     * @param {HTMLCanvasElement} canvas - the current canvas\n     */\n    tintWithPerPixel: (texture, color, canvas) =>\n    {\n        const context = canvas.getContext('2d');\n        const crop = texture._frame.clone();\n        const resolution = texture.baseTexture.resolution;\n\n        crop.x *= resolution;\n        crop.y *= resolution;\n        crop.width *= resolution;\n        crop.height *= resolution;\n\n        canvas.width = Math.ceil(crop.width);\n        canvas.height = Math.ceil(crop.height);\n\n        context.save();\n        context.globalCompositeOperation = 'copy';\n        context.drawImage(\n            texture.baseTexture.getDrawableSource(),\n            crop.x,\n            crop.y,\n            crop.width,\n            crop.height,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n        context.restore();\n\n        const rgbValues = hex2rgb(color);\n        const r = rgbValues[0];\n        const g = rgbValues[1];\n        const b = rgbValues[2];\n\n        const pixelData = context.getImageData(0, 0, crop.width, crop.height);\n\n        const pixels = pixelData.data;\n\n        for (let i = 0; i < pixels.length; i += 4)\n        {\n            pixels[i + 0] *= r;\n            pixels[i + 1] *= g;\n            pixels[i + 2] *= b;\n        }\n\n        context.putImageData(pixelData, 0, 0);\n    },\n\n    /**\n     * Rounds the specified color according to the canvasUtils.cacheStepsPerColorChannel.\n     *\n     * @memberof PIXI.canvasUtils\n     * @param {number} color - the color to round, should be a hex color\n     * @return {number} The rounded color.\n     */\n    roundColor: (color) =>\n    {\n        const step = canvasUtils.cacheStepsPerColorChannel;\n\n        const rgbValues = hex2rgb(color);\n\n        rgbValues[0] = Math.min(255, (rgbValues[0] / step) * step);\n        rgbValues[1] = Math.min(255, (rgbValues[1] / step) * step);\n        rgbValues[2] = Math.min(255, (rgbValues[2] / step) * step);\n\n        return rgb2hex(rgbValues);\n    },\n\n    /**\n     * Number of steps which will be used as a cap when rounding colors.\n     *\n     * @memberof PIXI.canvasUtils\n     * @type {number}\n     */\n    cacheStepsPerColorChannel: 8,\n\n    /**\n     * Tint cache boolean flag.\n     *\n     * @memberof PIXI.canvasUtils\n     * @type {boolean}\n     */\n    convertTintToImage: false,\n\n    /**\n     * Whether or not the Canvas BlendModes are supported, consequently the ability to tint using the multiply method.\n     *\n     * @memberof PIXI.canvasUtils\n     * @type {boolean}\n     */\n    canUseMultiply: canUseNewCanvasBlendModes(),\n\n    /**\n     * The tinting method that will be used.\n     *\n     * @memberof PIXI.canvasUtils\n     * @type {Function}\n     */\n    tintMethod: () =>\n    { // jslint-disable no-empty-function\n\n    },\n};\n\ncanvasUtils.tintMethod = canvasUtils.canUseMultiply ? canvasUtils.tintWithMultiply : canvasUtils.tintWithPerPixel;\n","import { Renderer } from '@pixi/core';\nimport { CanvasRenderer } from './CanvasRenderer';\n\n// Reference to Renderer.create static function\nconst parentCreate = Renderer.create;\n\n/**\n * Override the Renderer.create to fallback to use CanvasRenderer.\n * Also supports forceCanvas option with Application or autoDetectRenderer.\n * @private\n */\nRenderer.create = function create(options)\n{\n    const forceCanvas = options && options.forceCanvas;\n\n    if (!forceCanvas)\n    {\n        try\n        {\n            return parentCreate(options);\n        }\n        catch (err)\n        {\n            // swallow WebGL-unsupported error\n        }\n    }\n\n    return new CanvasRenderer(options);\n};\n","import { BaseTexture } from '@pixi/core';\n\n/**\n * Get the drawable source, such as HTMLCanvasElement or HTMLImageElement suitable\n * for rendering with CanvasRenderer. Provided by **@pixi/canvas-renderer** package.\n * @method getDrawableSource\n * @memberof PIXI.BaseTexture#\n * @return {PIXI.ICanvasImageSource} Source to render with CanvasRenderer\n */\nBaseTexture.prototype.getDrawableSource = function getDrawableSource()\n{\n    const resource = this.resource;\n\n    return resource ? (resource.bitmap || resource.source) : null;\n};\n"],"names":["const","let","SHAPES","BLEND_MODES","Matrix","super","RENDERER_TYPE","sayHello","CanvasRenderTarget","resources","settings","SCALE_MODES","AbstractRenderer","hex2rgb","rgb2hex","Renderer","BaseTexture"],"mappings":"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"}