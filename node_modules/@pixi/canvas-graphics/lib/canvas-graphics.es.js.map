{"version":3,"file":"canvas-graphics.es.js","sources":["../src/CanvasGraphicsRenderer.js","../src/Graphics.js"],"sourcesContent":["import { SHAPES, Matrix } from '@pixi/math';\nimport { canvasUtils } from '@pixi/canvas-renderer';\n/**\n * @author Mat Groves\n *\n * Big thanks to the very clever Matt DesLauriers <mattdesl> https://github.com/mattdesl/\n * for creating the original PixiJS version!\n * Also a thanks to https://github.com/bchevalier for tweaking the tint and alpha so that they\n * now share 4 bytes on the vertex buffer\n *\n * Heavily inspired by LibGDX's CanvasGraphicsRenderer:\n * https://github.com/libgdx/libgdx/blob/1.0.0/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java\n */\n\n/**\n * Renderer dedicated to drawing and batching graphics objects.\n *\n * @class\n * @protected\n * @memberof PIXI\n */\nexport class CanvasGraphicsRenderer\n{\n    /**\n     * @param {PIXI.CanvasRenderer} renderer - The current PIXI renderer.\n     */\n    constructor(renderer)\n    {\n        this.renderer = renderer;\n        this._svgMatrix = null;\n    }\n\n    /**\n     * calculates fill/stroke style for canvas\n     *\n     * @private\n     * @param {PIXI.FillStyle} style\n     * @param {number} tint\n     * @returns {string|CanvasPattern}\n     */\n    _calcCanvasStyle(style, tint)\n    {\n        let res;\n\n        if (style.texture)\n        {\n            if (style.texture.valid)\n            {\n                res = canvasUtils.getTintedPattern(style.texture, tint);\n                this.setPatternTransform(res, style.matrix || Matrix.IDENTITY);\n            }\n            else\n            {\n                res = '#808080';\n            }\n        }\n        else\n        {\n            res = `#${(`00000${(tint | 0).toString(16)}`).substr(-6)}`;\n        }\n\n        return res;\n    }\n\n    /**\n     * Renders a Graphics object to a canvas.\n     *\n     * @param {PIXI.Graphics} graphics - the actual graphics object to render\n     */\n    render(graphics)\n    {\n        const renderer = this.renderer;\n        const context = renderer.context;\n        const worldAlpha = graphics.worldAlpha;\n        const transform = graphics.transform.worldTransform;\n\n        renderer.setContextTransform(transform);\n\n        // update tint if graphics was dirty\n        if (graphics.canvasTintDirty !== graphics.geometry.dirty\n            || graphics._prevTint !== graphics.tint)\n        {\n            this.updateGraphicsTint(graphics);\n        }\n\n        renderer.setBlendMode(graphics.blendMode);\n\n        const graphicsData = graphics.geometry.graphicsData;\n\n        let contextFillStyle;\n        let contextStrokeStyle;\n\n        for (let i = 0; i < graphicsData.length; i++)\n        {\n            const data = graphicsData[i];\n            const shape = data.shape;\n            const fillStyle = data.fillStyle;\n            const lineStyle = data.lineStyle;\n\n            if (fillStyle.visible)\n            {\n                contextFillStyle = this._calcCanvasStyle(fillStyle, data._fillTint);\n            }\n            if (lineStyle.visible)\n            {\n                contextStrokeStyle = this._calcCanvasStyle(lineStyle, data._lineTint);\n            }\n\n            context.lineWidth = lineStyle.width;\n\n            if (data.type === SHAPES.POLY)\n            {\n                context.beginPath();\n\n                let points = shape.points;\n                const holes = data.holes;\n                let outerArea;\n                let innerArea;\n                let px;\n                let py;\n\n                context.moveTo(points[0], points[1]);\n\n                for (let j = 2; j < points.length; j += 2)\n                {\n                    context.lineTo(points[j], points[j + 1]);\n                }\n\n                if (shape.closeStroke)\n                {\n                    context.closePath();\n                }\n\n                if (holes.length > 0)\n                {\n                    outerArea = 0;\n                    px = points[0];\n                    py = points[1];\n                    for (let j = 2; j + 2 < points.length; j += 2)\n                    {\n                        outerArea += ((points[j] - px) * (points[j + 3] - py))\n                            - ((points[j + 2] - px) * (points[j + 1] - py));\n                    }\n\n                    for (let k = 0; k < holes.length; k++)\n                    {\n                        points = holes[k].shape.points;\n\n                        if (!points)\n                        {\n                            continue;\n                        }\n\n                        innerArea = 0;\n                        px = points[0];\n                        py = points[1];\n                        for (let j = 2; j + 2 < points.length; j += 2)\n                        {\n                            innerArea += ((points[j] - px) * (points[j + 3] - py))\n                                - ((points[j + 2] - px) * (points[j + 1] - py));\n                        }\n\n                        if (innerArea * outerArea < 0)\n                        {\n                            context.moveTo(points[0], points[1]);\n\n                            for (let j = 2; j < points.length; j += 2)\n                            {\n                                context.lineTo(points[j], points[j + 1]);\n                            }\n                        }\n                        else\n                        {\n                            context.moveTo(points[points.length - 2], points[points.length - 1]);\n\n                            for (let j = points.length - 4; j >= 0; j -= 2)\n                            {\n                                context.lineTo(points[j], points[j + 1]);\n                            }\n                        }\n\n                        if (holes[k].shape.closeStroke)\n                        {\n                            context.closePath();\n                        }\n                    }\n                }\n\n                if (fillStyle.visible)\n                {\n                    context.globalAlpha = fillStyle.alpha * worldAlpha;\n                    context.fillStyle = contextFillStyle;\n                    context.fill();\n                }\n\n                if (lineStyle.visible)\n                {\n                    context.globalAlpha = lineStyle.alpha * worldAlpha;\n                    context.strokeStyle = contextStrokeStyle;\n                    context.stroke();\n                }\n            }\n            else if (data.type === SHAPES.RECT)\n            {\n                if (fillStyle.visible)\n                {\n                    context.globalAlpha = fillStyle.alpha * worldAlpha;\n                    context.fillStyle = contextFillStyle;\n                    context.fillRect(shape.x, shape.y, shape.width, shape.height);\n                }\n                if (lineStyle.visible)\n                {\n                    context.globalAlpha = lineStyle.alpha * worldAlpha;\n                    context.strokeStyle = contextStrokeStyle;\n                    context.strokeRect(shape.x, shape.y, shape.width, shape.height);\n                }\n            }\n            else if (data.type === SHAPES.CIRC)\n            {\n                // TODO - need to be Undefined!\n                context.beginPath();\n                context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n                context.closePath();\n\n                if (fillStyle.visible)\n                {\n                    context.globalAlpha = fillStyle.alpha * worldAlpha;\n                    context.fillStyle = contextFillStyle;\n                    context.fill();\n                }\n\n                if (lineStyle.visible)\n                {\n                    context.globalAlpha = lineStyle.alpha * worldAlpha;\n                    context.strokeStyle = contextStrokeStyle;\n                    context.stroke();\n                }\n            }\n            else if (data.type === SHAPES.ELIP)\n            {\n                // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n                const w = shape.width * 2;\n                const h = shape.height * 2;\n\n                const x = shape.x - (w / 2);\n                const y = shape.y - (h / 2);\n\n                context.beginPath();\n\n                const kappa = 0.5522848;\n                const ox = (w / 2) * kappa; // control point offset horizontal\n                const oy = (h / 2) * kappa; // control point offset vertical\n                const xe = x + w; // x-end\n                const ye = y + h; // y-end\n                const xm = x + (w / 2); // x-middle\n                const ym = y + (h / 2); // y-middle\n\n                context.moveTo(x, ym);\n                context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n                context.closePath();\n\n                if (fillStyle.visible)\n                {\n                    context.globalAlpha = fillStyle.alpha * worldAlpha;\n                    context.fillStyle = contextFillStyle;\n                    context.fill();\n                }\n                if (lineStyle.visible)\n                {\n                    context.globalAlpha = lineStyle.alpha * worldAlpha;\n                    context.strokeStyle = contextStrokeStyle;\n                    context.stroke();\n                }\n            }\n            else if (data.type === SHAPES.RREC)\n            {\n                const rx = shape.x;\n                const ry = shape.y;\n                const width = shape.width;\n                const height = shape.height;\n                let radius = shape.radius;\n\n                const maxRadius = Math.min(width, height) / 2 | 0;\n\n                radius = radius > maxRadius ? maxRadius : radius;\n\n                context.beginPath();\n                context.moveTo(rx, ry + radius);\n                context.lineTo(rx, ry + height - radius);\n                context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n                context.lineTo(rx + width - radius, ry + height);\n                context.quadraticCurveTo(rx + width, ry + height, rx + width, ry + height - radius);\n                context.lineTo(rx + width, ry + radius);\n                context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n                context.lineTo(rx + radius, ry);\n                context.quadraticCurveTo(rx, ry, rx, ry + radius);\n                context.closePath();\n\n                if (fillStyle.visible)\n                {\n                    context.globalAlpha = fillStyle.alpha * worldAlpha;\n                    context.fillStyle = contextFillStyle;\n                    context.fill();\n                }\n                if (lineStyle.visible)\n                {\n                    context.globalAlpha = lineStyle.alpha * worldAlpha;\n                    context.strokeStyle = contextStrokeStyle;\n                    context.stroke();\n                }\n            }\n        }\n    }\n\n    /**\n     * Updates the tint of a graphics object\n     *\n     * @protected\n     * @param {PIXI.Graphics} graphics - the graphics that will have its tint updated\n     */\n    updateGraphicsTint(graphics)\n    {\n        graphics._prevTint = graphics.tint;\n        graphics.canvasTintDirty = graphics.geometry.dirty;\n\n        const tintR = ((graphics.tint >> 16) & 0xFF) / 255;\n        const tintG = ((graphics.tint >> 8) & 0xFF) / 255;\n        const tintB = (graphics.tint & 0xFF) / 255;\n        const graphicsData = graphics.geometry.graphicsData;\n\n        for (let i = 0; i < graphicsData.length; ++i)\n        {\n            const data = graphicsData[i];\n\n            const fillColor = data.fillStyle.color | 0;\n            const lineColor = data.lineStyle.color | 0;\n\n            // super inline, cos optimization :)\n            data._fillTint = (\n                (((fillColor >> 16) & 0xFF) / 255 * tintR * 255 << 16)\n                + (((fillColor >> 8) & 0xFF) / 255 * tintG * 255 << 8)\n                + (((fillColor & 0xFF) / 255) * tintB * 255)\n            );\n\n            data._lineTint = (\n                (((lineColor >> 16) & 0xFF) / 255 * tintR * 255 << 16)\n                + (((lineColor >> 8) & 0xFF) / 255 * tintG * 255 << 8)\n                + (((lineColor & 0xFF) / 255) * tintB * 255)\n            );\n        }\n    }\n\n    setPatternTransform(pattern, matrix)\n    {\n        if (this._svgMatrix === false)\n        {\n            return;\n        }\n        if (!this._svgMatrix)\n        {\n            const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n            if (svg && svg.createSVGMatrix)\n            {\n                this._svgMatrix = svg.createSVGMatrix();\n            }\n            if (!this._svgMatrix || !pattern.setTransform)\n            {\n                this._svgMatrix = false;\n\n                return;\n            }\n        }\n\n        this._svgMatrix.a = matrix.a;\n        this._svgMatrix.b = matrix.b;\n        this._svgMatrix.c = matrix.c;\n        this._svgMatrix.d = matrix.d;\n        this._svgMatrix.e = matrix.tx;\n        this._svgMatrix.f = matrix.ty;\n        pattern.setTransform(this._svgMatrix.inverse());\n    }\n    /**\n     * destroy graphics object\n     *\n     */\n    destroy()\n    {\n        this.renderer = null;\n    }\n}\n","import { Graphics } from '@pixi/graphics';\nimport { CanvasRenderer } from '@pixi/canvas-renderer';\nimport { RenderTexture, Texture } from '@pixi/core';\nimport { Matrix } from '@pixi/math';\n\nlet canvasRenderer;\nconst tempMatrix = new Matrix();\n\n/**\n * Generates a canvas texture. Only available with **pixi.js-legacy** bundle\n * or the **@pixi/canvas-graphics** package.\n * @method generateCanvasTexture\n * @memberof PIXI.Graphics#\n * @param {PIXI.SCALE_MODES} scaleMode - The scale mode of the texture.\n * @param {number} resolution - The resolution of the texture.\n * @return {PIXI.Texture} The new texture.\n */\nGraphics.prototype.generateCanvasTexture = function generateCanvasTexture(scaleMode, resolution = 1)\n{\n    const bounds = this.getLocalBounds();\n\n    const canvasBuffer = RenderTexture.create(bounds.width, bounds.height, scaleMode, resolution);\n\n    if (!canvasRenderer)\n    {\n        canvasRenderer = new CanvasRenderer();\n    }\n\n    this.transform.updateLocalTransform();\n    this.transform.localTransform.copyTo(tempMatrix);\n\n    tempMatrix.invert();\n\n    tempMatrix.tx -= bounds.x;\n    tempMatrix.ty -= bounds.y;\n\n    canvasRenderer.render(this, canvasBuffer, true, tempMatrix);\n\n    const texture = Texture.from(canvasBuffer.baseTexture._canvasRenderTarget.canvas, {\n        scaleMode,\n    });\n\n    texture.baseTexture.resolution = resolution;\n    texture.baseTexture.update();\n\n    return texture;\n};\n\nGraphics.prototype.cachedGraphicsData = [];\n\n/**\n * Renders the object using the Canvas renderer\n *\n * @method _renderCanvas\n * @memberof PIXI.Graphics#\n * @private\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */\nGraphics.prototype._renderCanvas = function _renderCanvas(renderer)\n{\n    if (this.isMask === true)\n    {\n        return;\n    }\n\n    this.finishPoly();\n    renderer.plugins.graphics.render(this);\n};\n"],"names":["const","let","j"],"mappings":"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"}